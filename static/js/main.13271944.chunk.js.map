{"version":3,"sources":["components/universal/Header.js","components/game/GameOver.js","components/game/Game.js","components/universal/Footer.js","App.js","index.js"],"names":["Header","className","GameOver","props","id","style","width","height","borderWidth","fontSize","score","newHighScore","highScore","Game","handleKeyDown","bind","state","blockWidth","blockHeight","gameLoopTimeout","timeoutId","startSnakeSize","snake","apple","direction","directionChanged","isGameOver","snakeColor","getRandomColor","appleColor","Number","localStorage","getItem","this","initGame","window","addEventListener","gameLoop","percentageWidth","document","getElementById","parentElement","offsetWidth","Xpos","Ypos","snakeHead","push","i","snakePart","appleXpos","Math","floor","random","appleYpos","setState","setTimeout","moveSnake","tryToEatSnake","tryToEatApple","clearTimeout","removeEventListener","isAppleOnSnake","color","previousPartX","previousPartY","tmpPartX","tmpPartY","moveHead","length","newTail","setItem","moveHeadLeft","moveHeadUp","moveHeadRight","moveHeadDown","event","keyCode","resetGame","goLeft","goUp","goRight","goDown","newDirection","map","index","left","top","background","React","Component","Footer","href","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.13271944.chunk.js","sourcesContent":["const Header = () => (\n  <>\n    <header className=\"header\">\n      <h1>Snake</h1>\n    </header>\n  </>\n);\n\nexport default Header;\n","import React from \"react\";\n\nfunction GameOver(props) {\n  return (\n    <div id='GameBoard'\n      style={{\n        width: props.width,\n        height: props.height,\n        borderWidth: props.width / 50,\n      }}>\n\n      <div id='GameOver'\n        style={{\n          fontSize: props.width / 15\n        }}>\n\n        <div id='GameOverText'>GAME OVER</div>\n        <div>Your score: {props.score}</div>\n\n        <div>\n          {props.newHighScore ? 'New local ' : 'Local '}High Score:{' '} {props.highScore}\n        </div>\n\n        <div id='PressSpaceText'>Press Space to restart</div>\n      </div>\n    </div>\n  )\n}\n\nexport default GameOver;\n","import React from \"react\";\nimport GameOver from \"./GameOver\";\n\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n\n    this.state = {\n      width: 0,\n      height: 0,\n      blockWidth: 0,\n      blockHeight: 0,\n      gameLoopTimeout: 50,\n      timeoutId: 0,\n      startSnakeSize: 0,\n      snake: [],\n      apple: {},\n      direction: 'right',\n      directionChanged: false,\n      isGameOver: false,\n      snakeColor: this.props.snakeColor || this.getRandomColor(),\n      appleColor: this.props.appleColor || this.getRandomColor(),\n      score: 0,\n      highScore: Number(localStorage.getItem('snakeHighScore')) || 0,\n      newHighScore: false,\n    }\n  }\n\n  componentDidMount() {\n    this.initGame();\n    window.addEventListener('keydown', this.handleKeyDown);\n    this.gameLoop();\n  }\n\n  initGame() {\n    // Game size initialization\n    let percentageWidth = this.props.percentageWidth || 40;\n    let width = document.getElementById('GameBoard').parentElement.offsetWidth * (percentageWidth / 100);\n    width -= width % 30;\n    if (width < 30) width = 30;\n    let height = (width / 3) * 2;\n    let blockWidth = width / 30;\n    let blockHeight = height / 20;\n\n    // Snake initialization\n    let startSnakeSize = this.props.startSnakeSize || 6;\n    let snake = [];\n    let Xpos = width / 2;\n    let Ypos = height / 2;\n    let snakeHead = {\n      Xpos: width / 2,\n      Ypos: height / 2,\n    }\n    snake.push(snakeHead);\n    for (let i = 1; i < startSnakeSize; i++) {\n      Xpos -= blockWidth;\n      let snakePart = {\n        Xpos: Xpos,\n        Ypos: Ypos,\n      }\n      snake.push(snakePart);\n    }\n\n    // Apple position initialization\n    let appleXpos = Math.floor(Math.random() * ((width - blockWidth) / blockWidth + 1)) * blockWidth;\n    let appleYpos = Math.floor(Math.random() * ((height - blockHeight) / blockHeight + 1)) * blockHeight;\n    while (appleYpos === snake[0].Ypos) {\n      appleYpos = Math.floor(Math.random() * ((height - blockHeight) / blockHeight + 1)) * blockHeight;\n    }\n\n    this.setState({\n      width,\n      height,\n      blockWidth,\n      blockHeight,\n      startSnakeSize,\n      snake,\n      apple: {\n        Xpos: appleXpos,\n        Ypos: appleYpos,\n      },\n    })\n  }\n\n  gameLoop() {\n    let timeoutId = setTimeout(() => {\n      if (!this.state.isGameOver) {\n        this.moveSnake();\n        this.tryToEatSnake();\n        this.tryToEatApple();\n        this.setState({ directionChanged: false });\n      }\n\n      this.gameLoop();\n    }, this.state.gameLoopTimeout);\n\n    this.setState({ timeoutId });\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.state.timeoutId);\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  resetGame() {\n    let width = this.state.width;\n    let height = this.state.height;\n    let blockWidth = this.state.blockWidth;\n    let blockHeight = this.state.blockHeight;\n    let apple = this.state.apple;\n\n    // Snake reset\n    let snake = [];\n    let Xpos = width / 2;\n    let Ypos = height / 2;\n    let snakeHead = {\n      Xpos: width / 2,\n      Ypos: height / 2,\n    };\n    snake.push(snakeHead);\n    for (let i = 1; i < this.state.startSnakeSize; i++) {\n      Xpos -= blockWidth;\n      let snakePart = {\n        Xpos: Xpos,\n        Ypos: Ypos,\n      }\n      snake.push(snakePart);\n    }\n\n    // Apple position reset\n    apple.Xpos = Math.floor(Math.random() * ((width - blockWidth) / blockWidth + 1)) * blockWidth;\n    apple.Ypos = Math.floor(Math.random() * ((height - blockHeight) / blockHeight + 1)) * blockHeight;\n    while (this.isAppleOnSnake(apple.Xpos, apple.Ypos)) {\n      apple.Xpos = Math.floor(Math.random() * ((width - blockWidth) / blockWidth + 1)) * blockWidth;\n      apple.Ypos = Math.floor(Math.random() * ((height - blockHeight) / blockHeight + 1)) * blockHeight;\n    }\n\n    this.setState({\n      snake,\n      apple,\n      direction: 'right',\n      directionChanged: false,\n      isGameOver: false,\n      gameLoopTimeout: 50,\n      snakeColor: this.getRandomColor(),\n      appleColor: this.getRandomColor(),\n      score: 0,\n      newHighScore: false,\n    })\n  }\n\n  getRandomColor() {\n    let hexa = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) color += hexa[Math.floor(Math.random() * 16)];\n    return color;\n  }\n\n  moveSnake() {\n    let snake = this.state.snake;\n    let previousPartX = this.state.snake[0].Xpos;\n    let previousPartY = this.state.snake[0].Ypos;\n    let tmpPartX = previousPartX;\n    let tmpPartY = previousPartY;\n    this.moveHead();\n    for (let i = 1; i < snake.length; i++) {\n      tmpPartX = snake[i].Xpos;\n      tmpPartY = snake[i].Ypos;\n      snake[i].Xpos = previousPartX;\n      snake[i].Ypos = previousPartY;\n      previousPartX = tmpPartX;\n      previousPartY = tmpPartY;\n    }\n    this.setState({ snake });\n  }\n\n  tryToEatApple() {\n    let snake = this.state.snake;\n    let apple = this.state.apple;\n\n    // When the snake's head hits the apple\n    if (snake[0].Xpos === apple.Xpos && snake[0].Ypos === apple.Ypos) {\n      let width = this.state.width;\n      let height = this.state.height;\n      let blockWidth = this.state.blockWidth;\n      let blockHeight = this.state.blockHeight;\n      let newTail = {\n        Xpos: apple.Xpos,\n        Ypos: apple.Ypos,\n      }\n      let highScore = this.state.highScore;\n      let newHighScore = this.state.newHighScore;\n      let gameLoopTimeout = this.state.gameLoopTimeout;\n\n      // Increase snake tail\n      snake.push(newTail);\n\n      // Create another apple\n      apple.Xpos = Math.floor(Math.random() * ((width - blockWidth) / blockWidth + 1)) * blockWidth;\n      apple.Ypos = Math.floor(Math.random() * ((height - blockHeight) / blockHeight + 1)) * blockHeight;\n      while (this.isAppleOnSnake(apple.Xpos, apple.Ypos)) {\n        apple.Xpos = Math.floor(Math.random() * ((width - blockWidth) / blockWidth + 1)) * blockWidth;\n        apple.Ypos = Math.floor(Math.random() * ((height - blockHeight) / blockHeight + 1)) * blockHeight;\n      }\n\n      // Increment high score if needed\n      if (this.state.score === highScore) {\n        highScore++;\n        localStorage.setItem('snakeHighScore', highScore);\n        newHighScore = true;\n      }\n\n      // decrease the game loop timeout\n      if (gameLoopTimeout > 25) gameLoopTimeout -= 0.5;\n\n      this.setState({\n        snake,\n        apple,\n        score: this.state.score + 1,\n        highScore,\n        newHighScore,\n        gameLoopTimeout,\n      })\n    }\n  }\n\n  tryToEatSnake() {\n    let snake = this.state.snake;\n\n    for (let i = 1; i < snake.length; i++) {\n      if (snake[0].Xpos === snake[i].Xpos && snake[0].Ypos === snake[i].Ypos) {\n        this.setState({ isGameOver: true });\n      }\n    }\n  }\n\n  isAppleOnSnake(appleXpos, appleYpos) {\n    let snake = this.state.snake;\n    for (let i = 0; i < snake.length; i++) {\n      if (appleXpos === snake[i].Xpos && appleYpos === snake[i].Ypos) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  moveHead() {\n    switch (this.state.direction) {\n      case 'left':\n        this.moveHeadLeft();\n        break;\n      case 'up':\n        this.moveHeadUp();\n        break;\n      case 'right':\n        this.moveHeadRight();\n        break;\n      default:\n        this.moveHeadDown();\n    }\n  }\n\n  moveHeadLeft() {\n    let width = this.state.width;\n    let blockWidth = this.state.blockWidth;\n    let snake = this.state.snake;\n    snake[0].Xpos = snake[0].Xpos <= 0 ? width - blockWidth : snake[0].Xpos - blockWidth;\n    this.setState({ snake });\n  }\n\n  moveHeadUp() {\n    let height = this.state.height;\n    let blockHeight = this.state.blockHeight;\n    let snake = this.state.snake;\n    snake[0].Ypos = snake[0].Ypos <= 0 ? height - blockHeight : snake[0].Ypos - blockHeight;\n    this.setState({ snake });\n  }\n\n  moveHeadRight() {\n    let width = this.state.width;\n    let blockWidth = this.state.blockWidth;\n    let snake = this.state.snake;\n    snake[0].Xpos = snake[0].Xpos >= width - blockWidth ? 0 : snake[0].Xpos + blockWidth;\n    this.setState({ snake });\n  }\n\n  moveHeadDown() {\n    let height = this.state.height;\n    let blockHeight = this.state.blockHeight;\n    let snake = this.state.snake;\n    snake[0].Ypos = snake[0].Ypos >= height - blockHeight ? 0 : snake[0].Ypos + blockHeight;\n    this.setState({ snake });\n  }\n\n  handleKeyDown(event) {\n    // If spacebar is pressed to run a new game\n    if (this.state.isGameOver && event.keyCode === 32) {\n      this.resetGame();\n      return;\n    }\n\n    if (this.state.directionChanged) return;\n\n    switch (event.keyCode) {\n      case 37:\n      case 65:\n        this.goLeft();\n        break;\n      case 38:\n      case 87:\n        this.goUp();\n        break;\n      case 39:\n      case 68:\n        this.goRight();\n        break;\n      case 40:\n      case 83:\n        this.goDown();\n        break;\n      default:\n    }\n    this.setState({ directionChanged: true });\n  }\n\n  goLeft() {\n    let newDirection = this.state.direction === 'right' ? 'right' : 'left';\n    this.setState({ direction: newDirection });\n  }\n\n  goUp() {\n    let newDirection = this.state.direction === 'down' ? 'down' : 'up';\n    this.setState({ direction: newDirection });\n  }\n\n  goRight() {\n    let newDirection = this.state.direction === 'left' ? 'left' : 'right';\n    this.setState({ direction: newDirection });\n  }\n\n  goDown() {\n    let newDirection = this.state.direction === 'up' ? 'up' : 'down';\n    this.setState({ direction: newDirection });\n  }\n\n\n  render() {\n    if (this.state.isGameOver) {\n      return (\n        <GameOver\n          width={this.state.width}\n          height={this.state.height}\n          highScore={this.state.highScore}\n          newHighScore={this.state.newHighScore}\n          score={this.state.score}\n        />\n      )\n    }\n\n    return (\n      <div\n        id='GameBoard'\n        style={{\n          width: this.state.width,\n          height: this.state.height,\n          borderWidth: this.state.width / 50,\n        }}>\n        {this.state.snake.map((snakePart, index) => {\n          return (\n            <div\n              key={index}\n              className='Block'\n              style={{\n                width: this.state.blockWidth,\n                height: this.state.blockHeight,\n                left: snakePart.Xpos,\n                top: snakePart.Ypos,\n                background: this.state.snakeColor,\n              }}\n            />\n          )\n        })}\n        <div\n          className='Block'\n          style={{\n            width: this.state.blockWidth,\n            height: this.state.blockHeight,\n            left: this.state.apple.Xpos,\n            top: this.state.apple.Ypos,\n            background: this.state.appleColor,\n          }}\n        />\n        <div id='Score' style={{ fontSize: this.state.width / 20 }}>\n          HIGH-SCORE: {this.state.highScore}&ensp;&ensp;&ensp;&ensp;SCORE:{' '}{this.state.score}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Game;\n","const Footer = () => (\n  <>\n    <footer>\n      <div className=\"social\">\n        <a href=\"https://www.linkedin.com/in/nicholas-gacicia/\"><i className=\"icon ion-social-linkedin\"></i></a>\n        <a href=\"https://github.com/nicholasgacicia\"><i className=\"icon ion-social-github\"></i></a>\n        <a href=\"https://twitter.com/NicholasGacicia\"><i className=\"icon ion-social-twitter\"></i></a>\n        <a href=\"https://www.facebook.com/NicholasGacicia/\"><i className=\"icon ion-social-facebook\"></i></a>\n        <a href=\"https://www.instagram.com/nicholasgacicia/\"><i className=\"icon ion-social-instagram\"></i></a>\n      </div>\n\n      <ul className=\"list-inline\">\n        <li className=\"list-inline-item\"><a href=\"https://www.nicholasgacicia.com/#home\">Home</a></li>\n        <li className=\"list-inline-item\"><a href=\"https://www.nicholasgacicia.com/#about\">About</a></li>\n        <li className=\"list-inline-item\"><a href=\"https://www.nicholasgacicia.com/#services\">Services</a></li>\n        <li className=\"list-inline-item\"><a href=\"https://www.nicholasgacicia.com/#portfolio\">Portfolio</a></li>\n        <li className=\"list-inline-item\"><a href=\"https://www.nicholasgacicia.com/#contact\">Contact</a></li>\n      </ul>\n      <p className=\"copyright\">Nicholas Gacicia © 2021, All Right Reserved</p>\n    </footer>\n  </>\n);\n\nexport default Footer;\n","import Header from \"./components/universal/Header\";\nimport Game from \"./components/game/Game\";\nimport Footer from \"./components/universal/Footer\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Game />\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}